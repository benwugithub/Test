/****** Object:  StoredProcedure [dbo].[SP_PRE_BAT_TMP_BILLING_CHG_FORMAT]    Script Date: 2019/3/23 下午 12:44:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
--程式代碼:PRE001
--程式名稱:SP_PRE_BAT_TMP_BILLING_CHG_FORMAT
--程式說明:更新PRE_TMP_BILLING資料並運算手續費及回佣
--建立日期:2017-07-14 By Hank Lu
--修改日期:
-- =============================================

CREATE PROCEDURE [dbo].[SP_PRE_BAT_TMP_BILLING_CHG_FORMAT]
  @batch_section int   --批次
--視參數是否需要加入
AS
--Declare Variable
DECLARE @exec_flag int              --執行戳記
       ,@Sp_Code varchar(20)        --程式代碼
       ,@Sp_Name varchar(200)       --程式名稱
       ,@Blk_Name varchar(200)      --區塊功能名稱
       ,@Desc_d varchar(200)        --細項LOG敘述
       ,@Desc_m varchar(200)        --監控LOG敘述
       ,@Flag varchar(50)           --狀態旗標
       ,@RowCount_Update int        --更新的行數
       ,@ErrNumber varchar(10)      --錯誤代碼 
       ,@ErrProcedure varchar(200)  --錯誤的Stored Procedure
       ,@ErrMessage varchar(200)    --錯誤訊息
       ,@ErrLine varchar(10)        --錯誤行號
       ,@ErrorSeverity int          --錯誤嚴重性
       ,@ErrorState int             --錯誤狀態碼
	   ,@Today date
	   ,@Yesterday date;

--Init Variable 
   SET @Sp_Code = 'PRE001'  --待確認
   SET @Sp_Name = 'SP_PRE_TMP_BILLING_CHG_FORMAT' 
   SET @Today = (SELECT CONVERT(date, chargelog_date, 111) FROM set_sys_para)
   SET @Yesterday = (SELECT DATEADD(DAY, -1, CONVERT(date, chargelog_date, 111)) FROM SET_SYS_PARA)
   
--開始執行批次,紀錄LOG
 SET @Desc_m = @Sp_Name + '開始'
 SET @Flag = 'START'
EXEC batch_record @Sp_Code, @Desc_m, @Flag, 'M'


--資料寫如TMP_BILLING
BEGIN TRY
      SET @Blk_Name = '更新PRE_TMP_BILLING資料'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

-- ================================================================================== -- 
-- 資料檢核開始
-- ================================================================================== --
-- 檢核REL_KEY_DETAIL是否重複
-- ================================================================================== -- 
-- 人工補登紅利交易已由「SP_PRE_DCAP_TO_BILLING」處理
      SET @Blk_Name = '交易金額(TX_AMOUNT)格式檢核'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing
      SET tx_amount = CASE WHEN (TRY_CAST(in_tx_amount AS bigint) IS NOT NULL)
	                        AND CHARGE_SOURCE='WALLET' --WALLET OtoO 金額不是 v99 不用除以100
                           THEN (CAST(in_tx_amount AS numeric(16,4)))
						   WHEN (TRY_CAST(in_tx_amount AS bigint) IS NOT NULL) 
						    AND (CAST(in_tx_amount AS numeric(16,4)) / 100 ) % 1 = 0  --判斷除100後是否為小數
	                        AND (charge_type IN ('EC', 'CUPEC', 'CYBERSOURCE') OR charge_source = 'NCPS') --郵購EC、NPCS為V99格式
	                       THEN (CAST(in_tx_amount AS numeric(16,4))) / 100
						   WHEN (TRY_CAST(in_tx_amount AS bigint) IS NOT NULL)
						    AND (charge_type = 'EDC' AND charge_source <> 'NCPS')
						   THEN (CAST(in_tx_amount AS numeric(16,4)))
						   WHEN charge_type IN ('DCC','DCAP')      --DCC結轉時已先檢核過
						   THEN tx_amount
					       ELSE NULL
						    END
    WHERE (in_cr_rebate_amt = '' OR in_cr_rebate_amt IS NULL OR CAST(in_cr_rebate_amt AS bigint) = 0 ) ----CUPEC 無此欄位 或 RTM 無紅利交易是帶00000000	 
	  AND settle_result IS NULL



   UPDATE bat_tmp_billing
      SET tx_amount = CASE WHEN (TRY_CAST(in_cr_rebate_amt AS bigint) IS NOT NULL) 
	                        AND CHARGE_SOURCE='WALLET' --WALLET OtoO 金額不是 v99 不用除以100
                           THEN (CAST(in_cr_order_pay AS numeric(16,4)))
						   WHEN (TRY_CAST(in_cr_rebate_amt AS bigint) IS NOT NULL)
						    AND (CAST(in_cr_rebate_amt AS numeric(16,4)) / 100 ) % 1 = 0  --判斷除100後是否為小數
	                        AND (charge_type IN ('EC', 'CUPEC', 'CYBERSOURCE') OR charge_source = 'NCPS') --郵購EC、NPCS為V99格式
	                       THEN (CAST(in_cr_order_pay AS numeric(16,4))) / 100						   
						   WHEN (TRY_CAST(in_cr_rebate_amt AS bigint) IS NOT NULL)
						    AND (charge_type = 'EDC' AND charge_source <> 'NCPS')
						   THEN (CAST(in_cr_order_pay AS numeric(16,4)))
						   WHEN charge_type IN ('DCC','DCAP')                 --DCC無紅利交易，且結轉前已檢核過
						   THEN tx_amount
					       ELSE NULL
						    END
    WHERE in_cr_rebate_amt <> ''	  
	  AND CAST(in_cr_rebate_amt AS bigint) <> 0
	  AND (LEFT(MER_NO,10) <> '0000081266')   --(SKM)新光三越特店帶原始交易金額
	  AND settle_result IS NULL

-- 新光三越SKM都帶原始交易金額，其他一般交易有紅利帶紅利折抵後金額，無紅利帶原始交易金額
  UPDATE bat_tmp_billing
      SET tx_amount = CASE WHEN (TRY_CAST(in_tx_amount AS bigint) IS NOT NULL)
	                        AND CHARGE_SOURCE='WALLET' --WALLET OtoO 金額不是 v99 不用除以100
                           THEN (CAST(in_tx_amount AS numeric(16,4)))
						   WHEN (TRY_CAST(in_tx_amount AS bigint) IS NOT NULL) 
						    AND (CAST(in_tx_amount AS numeric(16,4)) / 100 ) % 1 = 0
	                        AND (charge_type IN ('EC', 'CUPEC', 'CYBERSOURCE') OR charge_source = 'NCPS') --郵購EC、NPCS為V99格式
	                       THEN (CAST(in_tx_amount AS numeric(16,4))) / 100
						   WHEN (TRY_CAST(in_tx_amount AS bigint) IS NOT NULL)
						    AND (charge_type = 'EDC' AND charge_source <> 'NCPS')
						   THEN (CAST(in_tx_amount AS numeric(16,4)))
						   WHEN charge_type IN ('DCC','DCAP')      --DCC結轉時已先檢核過
						   THEN tx_amount
					       ELSE NULL
						    END
    WHERE in_cr_rebate_amt <> ''	  
	  AND CAST(in_cr_rebate_amt AS bigint) <> 0
	  AND (LEFT(MER_NO,10) = '0000081266')   --(SKM)新光三越特店帶原始交易金額
	  AND settle_result IS NULL


   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE COALESCE(tx_amount, 0) = 0 AND (in_cr_rebate_amt = '' OR in_cr_rebate_amt IS NULL OR CAST(in_cr_rebate_amt AS bigint) = 0 ) AND settle_result IS NULL ) > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'tx_amount'         --錯誤欄位
				  ,'in_tx_amount金額有誤或含小數'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE tx_amount IS NULL
			   AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			 ,tx_amount = 0
	    WHERE tx_amount IS NULL
		  AND settle_result IS NULL	 
   END

   SET @Blk_Name = '交易金額(TX_AMOUNT)格式檢核'
   SET @Desc_d = @Blk_Name + '結束'
   SET @Flag = 'END'
  EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
-- cr_rebate_amt
      SET @Blk_Name = '紅利金額(CR_REBATE_AMT)格式檢核'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing
      SET cr_rebate_amt = CASE WHEN (TRY_CAST(in_cr_rebate_amt AS bigint) IS NOT NULL) AND CHARGE_SOURCE='WALLET' --WALLET OtoO 金額不是 v99 不用除以100
							   THEN (CAST(in_cr_rebate_amt AS numeric(16,4)))
							   WHEN (TRY_CAST(in_cr_rebate_amt AS bigint) IS NOT NULL) 
							    AND (CAST(in_cr_rebate_amt AS numeric(16,4)) / 100 ) % 1 = 0  --判斷除100後是否為小數
	                            AND (charge_type IN ('EC', 'CUPEC', 'CYBERSOURCE') OR charge_source = 'NCPS') --郵購EC、NPCS為V99格式
							   THEN (CAST(in_cr_rebate_amt AS numeric(16,4))) / 100
							   WHEN (TRY_CAST(in_cr_rebate_amt AS bigint) IS NOT NULL)
							    AND (charge_type <> 'EC' and charge_type <> 'CUPEC' and charge_source <> 'NCPS')
							   THEN (CAST(in_cr_rebate_amt AS numeric(16,4)))
							   ELSE NULL
					            END
   WHERE charge_type NOT IN ('DCC','DCAP')
	 AND CAST(in_cr_rebate_amt AS bigint) <> 0
	 AND in_cr_rebate_amt <> ''	  
     AND settle_result IS NULL

   UPDATE bat_tmp_billing
      SET cr_rebate_amt = 0	 
	WHERE charge_type NOT IN ('DCC','DCAP')
	  AND (in_cr_rebate_amt = '' OR in_cr_rebate_amt IS NULL OR CAST(in_cr_rebate_amt AS bigint) = 0 )
	  AND settle_result IS NULL 

   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE cr_rebate_amt IS NULL AND in_cr_rebate_amt <> '') > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'cr_rebate_amt'         --錯誤欄位
				  ,'數值型態有誤或含小數，請確認'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE cr_rebate_amt IS NULL
			   AND in_cr_rebate_amt <> ''
			   AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			 ,cr_rebate_amt = 0
	    WHERE cr_rebate_amt IS NULL 
		  AND in_cr_rebate_amt <> ''
   END

   SET @Blk_Name = '紅利金額(CR_REBATE_AMT)格式檢核'
   SET @Desc_d = @Blk_Name + '結束'
   SET @Flag = 'END'
  EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
-- Clearing_Amount : 一般交易->原始交易金額。 紅利交易->紅利折抵後實付金額
--                   人工補登紅利交易已由「SP_PRE_DCAP_TO_BILLING」處理
      SET @Blk_Name = '清算金額(CLEARING_AMOUNT)格式檢核'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing
      SET clearing_amount = CASE WHEN (TRY_CAST(in_tx_amount AS bigint) IS NOT NULL) 
	                              AND CHARGE_SOURCE='WALLET' --WALLET OtoO 金額不是 v99 不用除以100
								 THEN (CAST(in_tx_amount AS numeric(16,4)))
								 WHEN (TRY_CAST(in_tx_amount AS bigint) IS NOT NULL)
								  AND (CAST(in_tx_amount AS numeric(16,4)) / 100 ) % 1 = 0  --判斷除100後是否為小數
	                              AND (charge_type IN ('EC', 'CUPEC', 'CYBERSOURCE') OR charge_source = 'NCPS') --郵購EC、NPCS為V99格式
	                             THEN (CAST(in_tx_amount AS numeric(16,4))) / 100
						         WHEN (TRY_CAST(in_tx_amount AS bigint) IS NOT NULL)
						          AND (charge_type = 'EDC' AND charge_source <> 'SKM' AND charge_source <> 'NCPS')
						         THEN (CAST(in_tx_amount AS numeric(16,4)))
						         WHEN (TRY_CAST (in_tx_amount AS bigint) IS NOT NULL)
					              AND (charge_source = 'SKM')
					             THEN (CAST(in_tx_amount AS numeric(16,4)))
								 WHEN charge_type = 'DCC' OR charge_source = 'DCAP_DCC'   --DCC無紅利交易，且結轉前已檢核過
								 THEN tx_amount
								 WHEN charge_source IN ('人工補登','人工分期')    --DCAP 已自帶清算金額
								 THEN clearing_amount 
					             ELSE NULL
						          END    
	WHERE (in_cr_rebate_amt = '' OR in_cr_rebate_amt IS NULL OR CAST(in_cr_rebate_amt AS bigint) = 0 ) ----CUPEC 無此欄位 或 RTM 無紅利交易是帶00000000
	  AND settle_result IS NULL
	   OR in_cr_order_pay IS NULL --CUPEC 無此欄位	  
	
   UPDATE bat_tmp_billing 
      SET clearing_amount = CASE WHEN (TRY_CAST(in_cr_rebate_amt AS bigint) IS NOT NULL) 
	                              AND CHARGE_SOURCE='WALLET' --WALLET OtoO 金額不是 v99 不用除以100
								 THEN (CAST(in_cr_rebate_amt AS numeric(16,4)))
								 WHEN (TRY_CAST(in_cr_rebate_amt AS bigint) IS NOT NULL) 
								  AND (CAST(in_cr_rebate_amt AS numeric(16,4)) / 100 ) % 1 = 0  --判斷除100後是否為小數
	                              AND (charge_type IN ('EC', 'CUPEC', 'CYBERSOURCE') OR charge_source = 'NCPS') --郵購EC、NPCS為V99格式
	                             THEN (CAST(in_cr_order_pay AS numeric(16,4))) / 100
						         WHEN (TRY_CAST(in_cr_rebate_amt AS bigint) IS NOT NULL)
						          AND (charge_type = 'EDC' AND charge_source <> 'NCPS') OR charge_type = 'DCAP'
						         THEN (CAST(in_cr_rebate_amt AS numeric(16,4)))
								 WHEN charge_type = 'DCC' OR charge_source = 'DCAP_DCC'   --DCC無紅利交易，且結轉前已檢核過 
								 THEN tx_amount
								 WHEN charge_source IN ('人工補登','人工分期')    --DCAP 已自帶清算金額
								 THEN clearing_amount 
					             ELSE NULL
						          END
    WHERE in_cr_rebate_amt <> ''	  
	  AND CAST(in_cr_rebate_amt AS bigint) <> 0
	  AND settle_result IS NULL

   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE clearing_amount IS NULL) > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'clearing_amount'         --錯誤欄位
				  ,'寫入Clearing_Amount, in_cr_order_pay或in_tx_amount數值型態有誤或含小數，請確認'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE clearing_amount IS NULL
			   AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			 ,clearing_amount = 0
	    WHERE clearing_amount IS NULL
   END

   SET @Blk_Name = '清算金額(CLEARING_AMOUNT)格式檢核'
   SET @Desc_d = @Blk_Name + '結束'
   SET @Flag = 'END'
  EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --  
   UPDATE bat_tmp_billing
      SET loan_period = '00'
	WHERE loan_period = '' OR loan_period IS NULL OR loan_period = '0'
-- ================================================================================== -- 
-- 判斷是否為晶片卡
      SET @Blk_Name = '晶片卡判斷'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing
      SET have_chip_data = 'N'
	WHERE settle_result IS NULL
	 
   UPDATE bat_tmp_billing  -- EDC
      SET have_chip_data = 'Y'
	 FROM bat_tmp_edc_billing_chip btebc (NOLOCK)
	     ,bat_tmp_billing bteb (NOLOCK)	    
	WHERE bteb.rel_key_detail = btebc.rel_key_detail
	  AND settle_result IS NULL
	  
      SET @Blk_Name = '晶片卡判斷'
      SET @Desc_d = @Blk_Name + '結束'
      SET @Flag = 'END'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
-- 判斷是有Addition資料
   UPDATE bat_tmp_billing  --EDC
      SET have_addition_data = 'Y'
	 FROM bat_tmp_billing_addition btba (NOLOCK)
	     ,bat_tmp_billing bteb (NOLOCK)
	WHERE btba.rel_key_detail = bteb.rel_key_detail
	  AND settle_result IS NULL
-- ================================================================================== --
-- 卡別
      SET @Blk_Name = '卡別轉換'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing
      SET card_type = (SELECT dbo.fn_chg_card_type_edc(in_card_type_orig))
    WHERE (SELECT dbo.fn_chg_card_type_edc(in_card_type_orig)) IS NOT NULL
	  AND charge_type = 'EDC'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing
      SET card_type = (SELECT dbo.fn_chg_card_type_not_edc(card_no))
    WHERE (SELECT dbo.fn_chg_card_type_not_edc(card_no)) IS NOT NULL
	  AND charge_type NOT IN ('EDC','CUPEC','DCAP')
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --EC HiTrust SmartPay 卡號需另外處理
      SET card_type = 'S'
	WHERE charge_type = 'EC'
	  AND charge_source = 'HISPPG'
	  
   UPDATE bat_tmp_billing
      SET card_type = (SELECT card_class
	                    FROM set_card_type (NOLOCK)
					   WHERE bat_tmp_billing.in_card_type_orig = set_card_type.card_code)
	WHERE charge_type = 'DCAP'
	  AND settle_result IS NULL
    
   --DISCOVER卡的資料不進APSS系統 20180812
   DELETE FROM bat_tmp_billing 
    WHERE card_type = 'D'

   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE card_type IS NULL) > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
            SELECT in_tx_type_orig
			      ,tx_type
                  ,mer_no
				  ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'in_card_type_orig'         --錯誤欄位
				  ,'匯入的卡別有誤，請確認'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			 FROM bat_tmp_billing btb
			WHERE card_type IS NULL
			  AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))			 
	    WHERE card_type IS NULL
   END

   SET @Blk_Name = '卡別轉換'
   SET @Desc_d = @Blk_Name + '結束'
   SET @Flag = 'END'
  EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D' 
-- ================================================================================== --
-- 卡號檢核
     SET @Blk_Name = '卡號檢核'
     SET @Desc_d = @Blk_Name + '開始'
     SET @Flag = 'START'
    EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
            SELECT in_tx_type_orig
			      ,tx_type
                  ,mer_no
				  ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'card_no'         --錯誤欄位
				  ,'卡號有誤'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			 FROM bat_tmp_billing btb
			WHERE dbo.fn_chk_card_no(card_type, card_no) = 'N'
			  AND charge_type <> 'CUPEC'
			  AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))			 
	    WHERE dbo.fn_chk_card_no(card_type, card_no) = 'N'
		  AND charge_type <> 'CUPEC'
   END

   SET @Blk_Name = '卡號檢核'
   SET @Desc_d = @Blk_Name + '結束'
   SET @Flag = 'END'
  EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
-- 檢核日期格式
      SET @Blk_Name = '日期格式檢核'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing
      SET tx_date = (SELECT dbo.fn_chk_date_format(in_tx_date))
	WHERE (SELECT dbo.fn_chk_date_format(in_tx_date)) IS NOT NULL
	  AND charge_source NOT IN ('SKM','RTM','MINGYAO','PACIFIC','WDCS','CYBERSOURCE')	  

   UPDATE bat_tmp_billing
      SET tx_date = CONCAT('20',SUBSTRING(in_tx_date,1,2),'-',SUBSTRING(in_tx_date,3,2),'-',SUBSTRING(in_tx_date,5,2))
	WHERE charge_source IN ('SKM','RTM','MINGYAO','PACIFIC','WDCS')	 
   
   UPDATE bat_tmp_billing
      SET tx_date = CASE WHEN CONCAT(SUBSTRING(CONVERT(VARCHAR,@Today,111),1,4),'-',SUBSTRING(in_tx_date,1,2),'-',SUBSTRING(in_tx_date,3,2)) > @Today
	                     THEN CONCAT(SUBSTRING(CONVERT(VARCHAR,DATEADD(DAY, -365, @Today),111),1,4),'-',SUBSTRING(in_tx_date,1,2),'-',SUBSTRING(in_tx_date,3,2))
						 ELSE CONCAT(SUBSTRING(CONVERT(VARCHAR,@Today,111),1,4),'-',SUBSTRING(in_tx_date,1,2),'-',SUBSTRING(in_tx_date,3,2))
						  END
	WHERE charge_type = 'CYBERSOURCE'
	   
   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE tx_date IS NULL AND charge_type <> 'DCC' AND charge_type <> 'DCAP' AND settle_result IS NULL ) > 0   --DCC, DCAP 不檢核日期格式
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'tx_date'         --錯誤欄位
				  ,'日期型態有誤'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE tx_date IS NULL
			   AND settle_result IS NULL
			   AND charge_type <> 'DCC'
			   AND charge_type <> 'DCAP'

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
	    WHERE tx_date IS NULL
		  AND charge_type <> 'DCC'
		  AND charge_type <> 'DCAP'
		  AND settle_result IS NULL
   END

   SET @Blk_Name = '日期格式檢核'
   SET @Desc_d = @Blk_Name + '結束'
   SET @Flag = 'END'
  EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
-- 實體卡號邏輯檢核
--若有實體卡號需大於10碼以上(預設值避免小於卡bin長度導致處理錯誤)
  SET @Blk_Name = '實體卡號邏輯檢核'
  SET @Desc_d = @Blk_Name + '開始'
  SET @Flag = 'START'
 EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   IF (SELECT COUNT(*)
         FROM bat_tmp_billing btb (NOLOCK)
		     ,bat_tmp_billing_addition btba (NOLOCK)
		WHERE btb.rel_key_detail = btba.rel_key_detail
		  AND btb.settle_result IS NULL
		  AND COALESCE(btba.token_real_pan, '') <> ''
		  AND btb.rel_key_detail NOT IN ( SELECT rel_key_detail
                                            FROM ( SELECT btb.card_no, btba.token_real_pan, btb.rel_key_detail
													 FROM bat_tmp_billing btb (NOLOCK)
													     ,bat_tmp_billing_addition btba (NOLOCK)
													WHERE btb.rel_key_detail = btba.rel_key_detail
													  AND btb.settle_result IS NULL
													  AND COALESCE(btba.token_real_pan, '') <> ''
												 ) a
			                               WHERE LEN(COALESCE(a.TOKEN_REAL_PAN,'')) > 0 AND LEN(COALESCE(a.TOKEN_REAL_PAN,'')) < 20
										) 
      ) > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'TOKEN_REAL_PAN'         --錯誤欄位
				  ,'有實體卡號但卡號長度有誤'  --錯誤狀況敘述
				  ,btb.log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,btb.rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,btb.charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb (NOLOCK)
			      ,bat_tmp_billing_addition btba (NOLOCK)
		     WHERE btb.rel_key_detail = btba.rel_key_detail
		       AND btb.settle_result IS NULL
		       AND COALESCE(btba.token_real_pan, '') <> ''
		       AND btb.rel_key_detail NOT IN ( SELECT rel_key_detail
                                                 FROM ( SELECT btb.card_no, btba.token_real_pan, btb.rel_key_detail
												          FROM bat_tmp_billing btb (NOLOCK)
													          ,bat_tmp_billing_addition btba (NOLOCK)
													     WHERE btb.rel_key_detail = btba.rel_key_detail
													       AND btb.settle_result IS NULL
													       AND COALESCE(btba.token_real_pan, '') <> ''
												      ) a
			                                    WHERE LEN(COALESCE(a.TOKEN_REAL_PAN,'')) > 0 AND LEN(COALESCE(a.TOKEN_REAL_PAN,'')) < 20
										     )

        UPDATE bat_tmp_billing
	       SET settle_result = '01'
		      ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))			 
		  FROM bat_tmp_billing btb (NOLOCK)
		      ,bat_tmp_billing_addition btba (NOLOCK)
		 WHERE btb.rel_key_detail = btba.rel_key_detail
		   AND btb.settle_result IS NULL
		   AND COALESCE(btba.token_real_pan, '') <> ''
		   AND btb.rel_key_detail NOT IN ( SELECT rel_key_detail
                                             FROM ( SELECT btb.card_no, btba.token_real_pan, btb.rel_key_detail
											          FROM bat_tmp_billing btb (NOLOCK)
													      ,bat_tmp_billing_addition btba (NOLOCK)
													 WHERE btb.rel_key_detail = btba.rel_key_detail
													   AND btb.settle_result IS NULL
													   AND COALESCE(btba.token_real_pan, '') <> ''
											      ) a
			                                WHERE LEN(COALESCE(a.TOKEN_REAL_PAN,'')) > 0 AND LEN(COALESCE(a.TOKEN_REAL_PAN,'')) < 20
										 )

   END
--若有實體卡號,則需要檢查清算卡號與實體卡號是否為自行卡	 
   IF (SELECT COUNT(*)
         FROM bat_tmp_billing btb (NOLOCK)
		     ,bat_tmp_billing_addition btba (NOLOCK)
		WHERE btb.rel_key_detail = btba.rel_key_detail
		  AND btb.settle_result IS NULL
		  AND COALESCE(btba.token_real_pan, '') <> ''
		  AND btb.rel_key_detail NOT IN ( SELECT rel_key_detail
                                            FROM ( SELECT btb.card_no, btba.token_real_pan, btb.rel_key_detail
													 FROM bat_tmp_billing btb (NOLOCK)
													     ,bat_tmp_billing_addition btba (NOLOCK)
													WHERE btb.rel_key_detail = btba.rel_key_detail
													  AND btb.settle_result IS NULL
													  AND COALESCE(btba.token_real_pan, '') <> ''
												 ) a
										   WHERE EXISTS (SELECT * 
										                   FROM set_onus_bin sob (NOLOCK)
														  WHERE LEFT(a.card_no, LEN(sob.bin_no)) = sob.bin_no)
										     AND EXISTS (SELECT * 
											               FROM set_onus_bin sob (NOLOCK)
														  WHERE LEFT(a.token_real_pan, LEN(sob.bin_no)) = sob.bin_no)
										) 
      ) > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'card_no,TOKEN_REAL_PAN'         --錯誤欄位
				  ,'有實體卡號但卡號與實體卡號不為自行卡錯誤'  --錯誤狀況敘述
				  ,btb.log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,btb.rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,btb.charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb (NOLOCK)
		          ,bat_tmp_billing_addition btba (NOLOCK)
		     WHERE btb.rel_key_detail = btba.rel_key_detail
		       AND btb.settle_result IS NULL
		       AND COALESCE(btba.token_real_pan, '') <> ''
		       AND btb.rel_key_detail NOT IN ( SELECT rel_key_detail
			                                     FROM ( SELECT btb.card_no, btba.token_real_pan, btb.rel_key_detail
												          FROM bat_tmp_billing btb (NOLOCK)
														      ,bat_tmp_billing_addition btba (NOLOCK)
														WHERE btb.rel_key_detail = btba.rel_key_detail
													      AND btb.settle_result IS NULL
														  AND COALESCE(btba.token_real_pan, '') <> ''
													  ) a
												WHERE EXISTS (SELECT *
												                FROM set_onus_bin sob (NOLOCK)
															   WHERE LEFT(a.card_no, LEN(sob.bin_no)) = sob.bin_no)
										          AND EXISTS (SELECT *
												                FROM set_onus_bin sob (NOLOCK)
															   WHERE LEFT(a.token_real_pan, LEN(sob.bin_no)) = sob.bin_no)
										     ) 

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))			 
		 FROM bat_tmp_billing btb (NOLOCK)
		     ,bat_tmp_billing_addition btba (NOLOCK)
		WHERE btb.rel_key_detail = btba.rel_key_detail
		  AND btb.settle_result IS NULL
		  AND COALESCE(btba.token_real_pan, '') <> ''
		  AND btb.rel_key_detail NOT IN ( SELECT rel_key_detail
			                                FROM ( SELECT btb.card_no, btba.token_real_pan, btb.rel_key_detail
											         FROM bat_tmp_billing btb (NOLOCK)
													     ,bat_tmp_billing_addition btba (NOLOCK)
													WHERE btb.rel_key_detail = btba.rel_key_detail
													  AND btb.settle_result IS NULL
													  AND COALESCE(btba.token_real_pan, '') <> ''
												 ) a
		                                    WHERE EXISTS (SELECT *
											                FROM set_onus_bin sob (NOLOCK)
														   WHERE LEFT(a.card_no, LEN(sob.bin_no)) = sob.bin_no)
										      AND EXISTS (SELECT *
											                FROM set_onus_bin sob (NOLOCK)
														   WHERE LEFT(a.token_real_pan, LEN(sob.bin_no)) = sob.bin_no)
										)

   END
   SET @Blk_Name = '實體卡號邏輯檢核'
   SET @Desc_d = @Blk_Name + '結束'
   SET @Flag = 'END'
  EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
-- MCC
   UPDATE bat_tmp_billing
      SET mcc = mmb.mcc_code	             
     FROM mdb_merchant_bas mmb (NOLOCK)
	WHERE bat_tmp_billing.mer_no = mmb.mer_no
	  AND settle_result IS NULL
	 
   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE mcc IS NULL) > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'MER_NO'         --錯誤欄位
				  ,'特店代號不存在'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE mcc IS NULL
			   AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			 ,mcc = ''			 
	    WHERE mcc IS NULL
   END
-- ================================================================================== --
-- 交易別
      SET @Blk_Name = '交易別轉換'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing
      SET tx_type = (SELECT dbo.fn_chg_tx_type(in_tx_type_orig, charge_type,charge_source, mcc))
	WHERE (SELECT dbo.fn_chg_tx_type(in_tx_type_orig, charge_type, charge_source, mcc)) IS NOT NULL	  

   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE tx_type IS NULL AND settle_result IS NULL) > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'in_tx_type_orig'         --錯誤欄位
				  ,'匯入的交易別有誤，請確認'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE tx_type IS NULL
			   AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			 ,tx_type = ''
	    WHERE tx_type IS NULL
		  AND settle_result IS NULL
   END

   SET @Blk_Name = '交易別轉換'
   SET @Desc_d = @Blk_Name + '結束'
   SET @Flag = 'END'
  EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
-- Amt_Sign (運算用正負號)
   UPDATE bat_tmp_billing
      SET amt_sign = CASE WHEN tx_type = '05' OR tx_type = '07'
	                      THEN '1'
						  WHEN tx_type = '06'
						  THEN '-1'
						  ELSE NULL
						   END
    WHERE settle_result IS NULL
-- ================================================================================== --
-- Entry_Mode
   UPDATE bat_tmp_billing
      SET ent_mode = (SELECT dbo.fn_chg_entry_mode(in_ent_mode_orig, charge_source))
	WHERE (SELECT dbo.fn_chg_entry_mode(in_ent_mode_orig, charge_source)) IS NOT NULL
	  AND charge_type = 'EDC'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing    --依照是否有晶片資料帶入05(有) 02(無)
	  SET ent_mode = CASE WHEN have_chip_data = 'Y' THEN '05' ELSE '02' END
	WHERE ent_mode IS NULL
	  AND charge_type = 'EDC'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing
      SET ent_mode = ''	 
    WHERE charge_type IN ('EC', 'CUPEC')
	  AND settle_result IS NULL

   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE ent_mode IS NULL AND charge_type = 'EDC') > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'ent_mode'           --錯誤欄位
				  ,'Entry Mode有誤，請確認，已依照是否有晶片資料帶入02或05'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE ent_mode IS NULL
			   AND charge_type = 'EDC'
			   AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			 ,ent_mode = ''
	    WHERE ent_mode IS NULL
		  AND charge_type = 'EDC'
   END
-- ================================================================================== --
-- 結帳日
      SET @Blk_Name = '計算結帳日(Closed_Date)'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing
      SET closed_date = (SELECT dbo.fn_chk_date_format(in_close_date))
	WHERE (SELECT dbo.fn_chk_date_format(in_close_date)) IS NOT NULL
	  AND charge_source = 'NCPS'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --StandIn日期格式不同
      SET closed_date = CONCAT('20',SUBSTRING(in_close_date,1,2),'-',SUBSTRING(in_close_date,3,2),'-',SUBSTRING(in_close_date,5,2))
	WHERE charge_type = 'EDC'
	  AND charge_source IN ( 'SKM', 'RTM', 'MINGYAO', 'PACIFIC','WDCS')
	  AND settle_result IS NULL
   
   UPDATE bat_tmp_billing -- EC 銀聯EC CPC
      SET closed_date = (CONVERT(varchar(10), @Yesterday, 111))
	WHERE (charge_type = 'EC' OR charge_type = 'CUPEC' OR charge_type = 'DCC' OR charge_type = 'CYBERSOURCE' OR charge_type = 'DCAP' OR charge_source = 'CPC')
	  AND settle_result IS NULL

   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE closed_date IS NULL) > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'closed_date'         --錯誤欄位
				  ,'日期型態有誤，請確認'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE closed_date IS NULL
			   AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
	    WHERE closed_date IS NULL
		  AND settle_result IS NULL
   END
   SET @Blk_Name = '計算結帳日(Closed_Date)'
   SET @Desc_d = @Blk_Name + '結束'
   SET @Flag = 'END'
  EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
-- 檢核時間格式
   UPDATE bat_tmp_billing
      SET tx_time = (SELECT dbo.fn_chk_time_format(in_tx_time))
	WHERE (SELECT dbo.fn_chk_time_format(in_tx_time)) IS NOT NULL
	  AND charge_type IN ( 'EDC', 'CUPEC')
	  AND charge_source <> 'CPC'
	  AND settle_result IS NULL

   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE tx_time IS NULL AND charge_type IN ( 'EDC', 'CUPEC') AND charge_source <> 'CPC') > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'tx_time'         --錯誤欄位
				  ,'時間型態有誤，請確認'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE tx_time IS NULL
			   AND settle_result IS NULL
			   AND (charge_type = 'EDC' OR charge_type = 'CUPEC')

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
	    WHERE tx_time IS NULL
		  AND (charge_type = 'EDC' OR charge_type = 'CUPEC')
   END   
-- ================================================================================== --
-- 中油 90 為 FALLBACK 故更新欄位旗標
   UPDATE bat_tmp_billing
      SET fall_back = 'T'
	WHERE in_ent_mode_orig = '90'
	  AND charge_source = 'CPC'
	  AND settle_result IS NULL
-- ================================================================================== --
-- cc_no (only for SKM)
   UPDATE bat_tmp_billing
      SET cc_no = '9' 
	             + RIGHT(term_id,5) --終端機代號末5碼
				 + SUBSTRING(batch_no, 2, 2) --批次號碼第2-3碼
				 + trace_no  -- SKM帳單序號(2碼)
    WHERE charge_source = 'SKM'
	  AND settle_result IS NULL

   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE cc_no IS NULL AND charge_source = 'SKM') > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'cc_no'         --錯誤欄位
				  ,'SKM調單編號有誤'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE cc_no IS NULL 
			   AND charge_source = 'SKM'
			   AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
	    WHERE cc_no IS NULL 
		  AND charge_source = 'SKM'
   END
-- ================================================================================== --
   --母特店代號(m_mer_no)
   UPDATE bat_tmp_billing
      SET m_mer_no = COALESCE(in_main_no, '')
     FROM mdb_merchant_bas mmb (NOLOCK)
	WHERE mmb.mer_no = bat_tmp_billing.mer_no
	  AND settle_result IS NULL
-- ================================================================================== --
   --付款特店代號(pay_mer_no)
      SET @Blk_Name = '付款特店代號檢核'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing
      SET pay_mer_no = in_main_no
     FROM mdb_merchant_bas mmb (NOLOCK)
	WHERE mmb.mer_no = bat_tmp_billing.mer_no
	  AND paytomain='Y'
	  AND settle_result IS NULL
   
   UPDATE bat_tmp_billing
      SET pay_mer_no = mer_no
	WHERE NOT EXISTS (SELECT 'X'
	                    FROM mdb_merchant_bas mmb (NOLOCK)
					   WHERE paytomain='Y'
					     AND bat_tmp_billing.mer_no = mmb.mer_no
					 )
	  AND settle_result IS NULL

	  SET @Blk_Name = '付款特店代號檢核'
      SET @Desc_d = @Blk_Name + '結束'
      SET @Flag = 'END'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
   --發票開立特店代號(invoice_mer_no)   
   UPDATE bat_tmp_billing  --若是S則是發票開立給群組母特店
      SET invoice_mer_no = in_main_no
	 FROM mdb_merchant_bas mmb (NOLOCK)
	WHERE invoiceway = 'S'
	  AND mmb.mer_no = bat_tmp_billing.mer_no
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --預設特店代號
      SET invoice_mer_no = mer_no
	WHERE invoice_mer_no IS NULL
    --WHERE NOT EXISTS (SELECT 'X' 
	   --                 FROM mdb_merchant_bas mmb
				--	   WHERE invoiceway = 'S'
				--	     AND bat_tmp_billing.mer_no = mmb.mer_no
					 --)
      AND settle_result IS NULL
-- ================================================================================== --
  --預計付款日
      SET @Blk_Name = '預計付款日(PRE_PAY_DATE)檢核'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
	/*
   UPDATE bat_tmp_billing
      SET pre_pay_date = CASE WHEN COALESCE(mmb.define_payday, '1900-1-1') >= @Today
	                          THEN mmb.define_payday
							  ELSE (SELECT dbo.get_workdate(DATEADD( DAY, delay_days, CONVERT(varchar(10), @Today, 111))))
							   END
	 FROM mdb_merchant_bas mmb (NOLOCK)
	WHERE mmb.mer_no = bat_tmp_billing.mer_no
	  AND settle_result IS NULL
	  */
	DECLARE @wkday DATE

	SET @wkday = dbo.get_workdate(@Today)

	UPDATE bat_tmp_billing
	SET pre_pay_date = CASE WHEN COALESCE(mmb.define_payday, '1900-1-1') >= @wkday
									THEN mmb.define_payday
									ELSE (SELECT dbo.get_workdate(DATEADD( DAY, delay_days, @wkday)))
									END
	FROM mdb_merchant_bas mmb (NOLOCK)
	WHERE mmb.mer_no = bat_tmp_billing.mer_no
	AND settle_result IS NULL

	  SET @Blk_Name = '預計付款日(PRE_PAY_DATE)檢核'
      SET @Desc_d = @Blk_Name + '結束'
      SET @Flag = 'END'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== -- 
   --預計發票日
      SET @Blk_Name = '預計發票日(PRE_INVOICE_DATE)檢核'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing  --若有延後付款，已此日期再推算發票開立日。
      SET pre_invoice_date = (SELECT dbo.get_workdate(CONVERT(varchar(10), pre_pay_date, 111)))
	 FROM mdb_merchant_bas mmb (NOLOCK)
	WHERE bat_tmp_billing.settle_result IS NULL
	  AND mmb.mer_no = bat_tmp_billing.mer_no
	  AND in_receipt = 'A'
	  /*
   UPDATE bat_tmp_billing
      SET pre_invoice_date = CASE WHEN (SELECT COUNT(*) FROM set_holiday WHERE EOMONTH(@Today) = holiday_date) > 0
	                              THEN (SELECT dbo.fn_get_previous_workdate(CONVERT(varchar(10), EOMONTH(pre_pay_date), 111)))
								  ELSE EOMONTH(@Today)
								   END
	 FROM mdb_merchant_bas mmb (NOLOCK)
	WHERE bat_tmp_billing.settle_result IS NULL
	  AND mmb.mer_no = bat_tmp_billing.mer_no
	  AND in_receipt = 'D'
	  */
	DECLARE @dMONTHFIRSTDate DATE
	DECLARE @dMONTHLASTDate DATE

	DECLARE PRE_INVOICE_DATE_CURSOR CURSOR SCROLL FOR
	SELECT DISTINCT convert(date, left(convert(varchar, pre_pay_date, 111), 8) + '01') FROM bat_tmp_billing bill
	JOIN mdb_merchant_bas mmb on  mmb.mer_no = bill.mer_no
	WHERE bill.settle_result IS NULL AND in_receipt = 'D' and pre_pay_date is not null
	ORDER BY convert(date, left(convert(varchar, pre_pay_date, 111), 8) + '01') 

	OPEN PRE_INVOICE_DATE_CURSOR 
	FETCH NEXT FROM PRE_INVOICE_DATE_CURSOR 
	INTO @dMONTHFIRSTDate

	WHILE @@FETCH_STATUS = 0
	BEGIN
		--計算出月底日
		SET @dMONTHLASTDate = DATEADD(day, -1, DATEADD(mm, DATEDIFF(mm, '', @dMONTHFIRSTDate) + 1, '')) 
		WHILE (1=1)
		BEGIN
			IF EXISTS (SELECT * FROM SET_HOLIDAY WHERE HOLIDAY_DATE = @dMONTHLASTDate AND IS_CHECKED = 'Y')
			BEGIN
				SET @dMONTHLASTDate =  DATEADD(day, -1, @dMONTHLASTDate)
			END 
			ELSE
			BEGIN
				BREAK
			END
		END
			
		UPDATE bat_tmp_billing
		SET pre_invoice_date = @dMONTHLASTDate
		FROM mdb_merchant_bas mmb (NOLOCK)
		WHERE bat_tmp_billing.settle_result IS NULL
		AND mmb.mer_no = bat_tmp_billing.mer_no
		AND in_receipt = 'D' and pre_pay_date is not null
		AND convert(date, left(convert(varchar, pre_pay_date, 111), 8) + '01') = @dMONTHFIRSTDate
	
		FETCH NEXT FROM PRE_INVOICE_DATE_CURSOR 
		INTO @dMONTHFIRSTDate 
	END
	CLOSE PRE_INVOICE_DATE_CURSOR 
	DEALLOCATE PRE_INVOICE_DATE_CURSOR 

	SET @Blk_Name = '預計發票日(PRE_INVOICE_DATE)檢核'
	SET @Desc_d = @Blk_Name + '結束'
	SET @Flag = 'END'
	EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
   --全額付款標記 mdb_merchant_bas.paymenttype 來源 A:全額 N:一般
   UPDATE bat_tmp_billing
      SET allocate_flag = CASE WHEN paymenttype = 'A'
	                           THEN 'Y'
							   ELSE 'N'
							    END
	 FROM mdb_merchant_bas mmb (NOLOCK)
	WHERE mmb.mer_no = bat_tmp_billing.mer_no
	  AND settle_result IS NULL
-- ================================================================================== --
-- 是否為自行卡
      SET @Blk_Name = '判別是否為自行卡'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing
      SET onus = 'Y'
	     ,comm_rate_card_type = sob.card_code
     FROM set_onus_bin sob (NOLOCK)
	WHERE LEFT(card_no,LEN(sob.bin_no)) = sob.bin_no
	  AND settle_result IS NULL

  UPDATE bat_tmp_billing  
	 SET onus = 'Y'
	FROM bat_tmp_billing_addition btba (NOLOCK)
   WHERE bat_tmp_billing.rel_key_detail = btba.rel_key_detail
     AND COALESCE(btba.token_real_pan, '') <> ''
	 AND bat_tmp_billing.settle_result IS NULL
	 	

   UPDATE bat_tmp_billing   --二分法處理
      SET onus = 'N'
	WHERE NOT EXISTS (SELECT 'X'
	                    FROM set_onus_bin sob (NOLOCK)
					   WHERE LEFT(card_no,LEN(sob.bin_no)) = sob.bin_no
					 )
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing
      SET is_local = 'N'
	WHERE (card_type = 'S' OR charge_source = 'DCC')
	  AND settle_result IS NULL

	  SET @Blk_Name = '判別是否為自行卡'
      SET @Desc_d = @Blk_Name + '結束'
      SET @Flag = 'END'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
-- 是否為國外卡
      SET @Blk_Name = '判別是否為國外卡'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing
      SET is_local = 'Y'
	 FROM set_lcbin sl
	WHERE LEFT(card_no,LEN(sl.lcb_bin)) = sl.lcb_bin
	  AND settle_result IS NULL
   
   UPDATE bat_tmp_billing
      SET is_local = 'N'	 
	WHERE NOT EXISTS (SELECT 'X'
	                    FROM set_lcbin sl (NOLOCK)
					   WHERE LEFT(card_no,LEN(sl.lcb_bin)) = sl.lcb_bin
					 )
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing
      SET is_local = 'Y'
	WHERE card_type IN ('S','N')
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing
      SET is_local = 'N'
	WHERE charge_source = 'DCC'
	  AND settle_result IS NULL

	  SET @Blk_Name = '判別是否為國外卡'
      SET @Desc_d = @Blk_Name + '結束'
      SET @Flag = 'END'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
   --更新聯名特店，全家代入FAMILY
   UPDATE bat_tmp_billing
      SET cooperated_id = 'FAMILY'
	 FROM mdb_merchant_bas_info mmbi (NOLOCK)
    WHERE mmbi.join_mer_id='FAMILY'
	  AND mmbi.mer_no = bat_tmp_billing.mer_no
	  AND settle_result IS NULL
-- ================================================================================== --
-- test_card_no(onhold)
-- ================================================================================== --
-- 自行卡手續費
      SET @Blk_Name = '手續費運算'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'	

   UPDATE bat_tmp_billing  --將comm_rate_card_type 更新為對應的卡別
      SET comm_rate_card_type = CASE WHEN card_type = 'V' THEN 'VS'
	                                 WHEN card_type = 'M' THEN 'MT'
									 WHEN card_type = 'J' THEN 'JC'
									 WHEN card_type = 'C' THEN 'CU'
									 WHEN card_type = 'S' THEN 'SP'
									 WHEN card_type = 'N' THEN 'NC'
									 ELSE ''
									  END
    WHERE batch_section = @batch_section
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --更新對應的費率
      SET comm_rate = mmr.card_rate	     
	 FROM mdb_mer_rate mmr (NOLOCK)
    WHERE mmr.mer_no = bat_tmp_billing.mer_no
	  AND mmr.loan_period = bat_tmp_billing.loan_period
	  AND comm_rate_card_type = mmr.card_type
	  AND batch_section = @batch_section
	  AND settle_result IS NULL	  
	
   UPDATE bat_tmp_billing  --更新國外卡的費率和comm_rate_card_type
      SET comm_rate = mmr.card_rate
	     ,comm_rate_card_type = CONCAT(bat_tmp_billing.card_type,'F') 
	 FROM mdb_mer_rate mmr (NOLOCK)
	WHERE is_local = 'N'	  
	  AND mmr.mer_no = bat_tmp_billing.mer_no
	  AND mmr.loan_period = bat_tmp_billing.loan_period
	  AND CONCAT(bat_tmp_billing.card_type,'F') = mmr.card_type
	  AND batch_section = @batch_section
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --更新卡別有設定為自行卡(OV、OM、OJ、OC)的費率，並將 comm_rate_card_type 更新為(OV、OM、OJ、OC)
      SET comm_rate = mmr.card_rate
	     ,comm_rate_card_type = CONCAT('O',bat_tmp_billing.card_type) 
	 FROM mdb_mer_rate mmr (NOLOCK)
    WHERE onus = 'Y'
	  AND settle_result IS NULL
	  AND mmr.mer_no = bat_tmp_billing.mer_no
	  AND mmr.loan_period = bat_tmp_billing.loan_period
	  AND CONCAT('O',bat_tmp_billing.card_type) = mmr.card_type
	  AND batch_section = @batch_section
   
   UPDATE bat_tmp_billing  --更新聯名卡對應的費率和comm_rate_card_type
      SET comm_rate = mmr.card_rate
		 ,comm_rate_card_type = mmr.card_type
	 FROM mdb_mer_rate mmr (NOLOCK)
	WHERE onus = 'Y'
	  AND settle_result IS NULL
	  AND batch_section = @batch_section
	  AND mmr.mer_no = bat_tmp_billing.mer_no
	  AND mmr.loan_period = bat_tmp_billing.loan_period
	  AND mmr.card_type = (SELECT TOP 1 card_code
	                         FROM set_onus_bin
						    WHERE LEFT(card_no, LEN(bin_no)) = bin_no
							ORDER BY bin_no DESC)

   --三商美邦特店針對聯名卡在分店BRANCH_CODE0010且remark值有1或１需使用特殊費率
   --若特店未有特殊費率視同無費率(null)剔退 此為特殊處理 
   UPDATE bat_tmp_billing
      SET comm_rate =(SELECT special_rate 
	                    FROM mdb_merchant_basrate_info (NOLOCK)
					   WHERE mdb_merchant_basrate_info.mer_no = bat_tmp_billing.mer_no)
   WHERE bat_tmp_billing.ONUS = 'Y'    --自行卡
      AND bat_tmp_billing.MER_NO IN (SELECT mmbi.mer_no 
	                                   FROM mdb_merchant_bas_info mmbi (NOLOCK)
									  WHERE mmbi.join_mer_id ='0010')--須為三商美邦特店 join_mer_id = '0010'
      AND LEFT(bat_tmp_billing.remark,1) IN ('1', '１')     --REMARK值為1或１
      AND EXISTS (SELECT set_onus_bin.BIN_NO 
	                FROM set_onus_bin (NOLOCK)
				   WHERE set_onus_bin.CARD_CODE ='ML' 
				     AND set_onus_bin.bin_no = LEFT(bat_tmp_billing.card_no, LEN(set_onus_bin.bin_no)) )  --三商美邦卡
	  AND batch_section = @batch_section
	  AND settle_result IS NULL

  UPDATE bat_tmp_billing  --實體卡號對應的費率卡別
	 SET comm_rate_card_type = b.card_code
	    ,comm_rate = mmr.card_rate	 		 
	FROM ( SELECT sob.card_code, rel_key_detail
             FROM ( SELECT btb.card_no, btba.token_real_pan, btb.rel_key_detail
			          FROM bat_tmp_billing btb (NOLOCK)
					      ,bat_tmp_billing_addition btba (NOLOCK)
					 WHERE btb.rel_key_detail = btba.rel_key_detail					   
					   AND btb.settle_result IS NULL
					   AND COALESCE(btba.token_real_pan, '') <> ''
				  ) a
				 , set_onus_bin sob				 
			WHERE LEFT(a.token_real_pan, LEN(sob.bin_no)) = sob.bin_no
		 ) b
		 , mdb_mer_rate mmr
	WHERE bat_tmp_billing.rel_key_detail = b.rel_key_detail
	  AND mmr.card_type = b.card_code
	  AND mmr.mer_no = bat_tmp_billing.mer_no
	  AND mmr.loan_period = bat_tmp_billing.loan_period
	  AND bat_tmp_billing.settle_result IS NULL

   --人工補登固定費率及卡別
   UPDATE bat_tmp_billing
      SET comm_rate = adjusted_rate
	     ,comm_rate_card_type = a.card_type
     FROM ( SELECT de.*
              FROM pre_dis_entry_tmp de (NOLOCK)
			      ,(SELECT MAX(ins_datetime) AS max_time FROM pre_dis_entry_tmp) AS tmp
             WHERE de.is_approve = 'Y'
               AND de.is_adjrate = 'Y'
			   AND tmp.max_time = de.ins_datetime
          ) a
    WHERE a.rel_key_detail = bat_tmp_billing.rel_key_detail
	  AND bat_tmp_billing.settle_result IS NULL
	  AND @batch_section = '1'
	     
   UPDATE bat_tmp_billing  --計算出手續費
      SET comm_amt = tx_amount * comm_rate / 100
	WHERE comm_rate IS NOT NULL
	  AND batch_section = @batch_section
	  AND settle_result IS NULL
   
   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE comm_rate IS NULL) > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'comm_rate'         --錯誤欄位
				  ,CASE WHEN loan_period = '00 '
				        THEN '手續費率不存在'
						ELSE '分期手續費率不存在'
						END 
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE comm_rate IS NULL
			   AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
	    WHERE comm_rate IS NULL
   END 

   SET @Blk_Name = '手續費運算'
   SET @Desc_d = @Blk_Name + '結束'
   SET @Flag = 'END'
  EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'    
-- ================================================================================== --
-- 發卡行回佣(BASE_INT_RATE, INT_RATE, INT_AMT)
      SET @Blk_Name = '發卡行回佣運算'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing  --更新SmartPay機動金額回佣費率
      SET base_int_rate = afr.int_rate
	     ,int_rate = CASE WHEN comm_rate > afr.int_rate
		                  THEN afr.int_rate
						  ELSE comm_rate
						   END
	 FROM acc_fee_rate afr (NOLOCK), mdb_merchant_bas mmb (NOLOCK)
	WHERE bat_tmp_billing.card_type = 'S'
	  AND bat_tmp_billing.mer_no = mmb.mer_no
	  AND mmb.smartpayrebates = 'N'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --更新國外卡回佣費率
      SET base_int_rate = afr.int_rate
	     ,int_rate = CASE WHEN comm_rate > afr.int_rate
		                  THEN afr.int_rate
						  ELSE comm_rate
						   END
	 FROM acc_fee_rate afr (NOLOCK)
	WHERE bat_tmp_billing.is_local = 'N'
	  AND CONCAT(bat_tmp_billing.card_type,'F') = afr.card_dist
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --更新自行卡回佣費率
      SET base_int_rate = afr.int_rate
	     ,int_rate = CASE WHEN comm_rate > afr.int_rate
		                  THEN afr.int_rate
						  ELSE comm_rate
						   END
	 FROM acc_fee_rate afr (NOLOCK)
	WHERE bat_tmp_billing.onus = 'Y' --自行卡
	  AND afr.card_dist = 'ONUS'   
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --更新國內他行VISA卡回佣費率
      SET base_int_rate = afr.int_rate
	     ,int_rate = CASE WHEN comm_rate > afr.int_rate
		                  THEN afr.int_rate
						  ELSE comm_rate
						   END
	 FROM acc_fee_rate afr (NOLOCK)
	WHERE bat_tmp_billing.is_local = 'Y' 
	  AND bat_tmp_billing.onus = 'N'
	  AND afr.card_dist = 'VS'
	  AND bat_tmp_billing.card_type = 'V'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --更新國內他行MASTER卡回佣費率
      SET base_int_rate = afr.int_rate
	     ,int_rate = CASE WHEN comm_rate > afr.int_rate
		                  THEN afr.int_rate
						  ELSE comm_rate
						   END
	 FROM acc_fee_rate afr (NOLOCK)
	WHERE bat_tmp_billing.is_local = 'Y' 
	  AND bat_tmp_billing.onus = 'N'
	  AND afr.card_dist = 'MT'
	  AND bat_tmp_billing.card_type = 'M'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --更新國內他行JCB卡回佣費率
      SET base_int_rate = afr.int_rate
	     ,int_rate = CASE WHEN comm_rate > afr.int_rate
		                  THEN afr.int_rate
						  ELSE comm_rate
						   END
	 FROM acc_fee_rate afr (NOLOCK)
	WHERE bat_tmp_billing.is_local = 'Y' 
	  AND bat_tmp_billing.onus = 'N'
	  AND afr.card_dist = 'JC'
	  AND bat_tmp_billing.card_type = 'J'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --更新國內他行銀聯卡回佣費率
      SET base_int_rate = afr.int_rate
	     ,int_rate = CASE WHEN comm_rate > afr.int_rate
		                  THEN afr.int_rate
						  ELSE comm_rate
						   END
	 FROM acc_fee_rate afr (NOLOCK)
	WHERE bat_tmp_billing.is_local = 'Y' 
	  AND bat_tmp_billing.onus = 'N'
	  AND afr.card_dist = 'C'
	  AND bat_tmp_billing.card_type = 'CU'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --更新國內他行NCCC卡回佣費率
      SET base_int_rate = afr.int_rate
	     ,int_rate = CASE WHEN comm_rate > afr.int_rate
		                  THEN afr.int_rate
						  ELSE comm_rate
						   END
	 FROM acc_fee_rate afr (NOLOCK)
	WHERE bat_tmp_billing.is_local = 'Y' 
	  AND bat_tmp_billing.onus = 'N'
	  AND afr.card_dist = 'NC'
	  AND bat_tmp_billing.card_type = 'N'
	  AND settle_result IS NULL
	  
   UPDATE bat_tmp_billing  --更新銀聯卡一般交易回佣費率
      SET base_int_rate = afr.int_rate
	     ,int_rate = CASE WHEN comm_rate > afr.int_rate
		                  THEN afr.int_rate
						  ELSE comm_rate
						   END
	 FROM acc_fee_rate afr (NOLOCK)
	WHERE bat_tmp_billing.card_type = 'C'
	  AND bat_tmp_billing.charge_type <> 'CUPEC'
	  AND afr.card_dist = 'CUP'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --更新銀聯卡EC交易回佣
      SET base_int_rate = afr.int_rate
	     ,int_rate = CASE WHEN comm_rate > afr.int_rate
		                  THEN afr.int_rate
						  ELSE comm_rate
						   END
	 FROM acc_fee_rate afr (NOLOCK)
	WHERE bat_tmp_billing.card_type = 'C'
	  AND bat_tmp_billing.charge_type = 'CUPEC'
	  AND afr.card_dist = 'CUPEC'
	  AND settle_result IS NULL

    UPDATE bat_tmp_billing  --更新公部門交易回佣
       SET base_int_rate = afr.int_rate
          ,int_rate = CASE WHEN comm_rate > afr.int_rate
                           THEN afr.int_rate
                           ELSE comm_rate
                            END
      FROM acc_fee_rate afr (NOLOCK)
          ,mdb_merchant_bas mmb
     WHERE afr.card_dist = 'PUBLIC'
       AND bat_tmp_billing.mer_no = mmb.mer_no
       AND mmb.is_publicsector = 'Y'
       AND settle_result IS NULL

   UPDATE bat_tmp_billing  --更新SmartPay浮動回佣費率
      SET base_int_rate = afr.int_rate
	     ,int_rate = CASE WHEN comm_rate > afr.int_rate
		                  THEN afr.int_rate
						  ELSE comm_rate
						   END
	 FROM acc_fee_rate afr (NOLOCK), mdb_merchant_bas mmb (NOLOCK)
	WHERE bat_tmp_billing.card_type = 'S'
	  AND bat_tmp_billing.mer_no = mmb.mer_no
	  AND mmb.smartpayrebates = 'N'  --N 表示代機動費率
	  AND afr.card_dist = 'SP_UNFIXED'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --更新所有的回佣金額
      SET int_amt = tx_amount * int_rate / 100	
	WHERE settle_result IS NULL

   UPDATE bat_tmp_billing  --更新SmartPay固定金額回佣
      SET base_int_rate = afr.int_rate                --目前系統設定為3.5元，非費率
	     ,int_rate = afr.int_rate / tx_amount * 100   --用金額回推出費率，但不會拿來使用
		 ,int_amt = afr.int_rate                      --目前系統設定為3.5元，非費率
	 FROM acc_fee_rate afr (NOLOCK), mdb_merchant_bas mmb (NOLOCK)
	WHERE bat_tmp_billing.card_type = 'S'
	  AND afr.card_dist = 'SP_FIXED'
	  AND bat_tmp_billing.mer_no = mmb.mer_no
	  AND mmb.smartpayrebates = 'Y'  --Y 表示代固定費率
	  AND settle_result IS NULL

   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE int_rate IS NULL) > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'int_rate'         --錯誤欄位
				  ,'回佣費率有誤，請確認acc_fee_rate是否有對應資料，或手續費為NULL'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE int_rate IS NULL
			   AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
	    WHERE int_rate IS NULL
   END

   SET @Blk_Name = '發卡行回佣運算'
   SET @Desc_d = @Blk_Name + '結束'
   SET @Flag = 'END'
  EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
-- 收單手續費收入費率(SVC_RATE, SVC_AMT)
      SET @Blk_Name = '收單手續費收入運算'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing  --更新收單手續費收入費率
      SET svc_rate = comm_rate - int_rate
	WHERE settle_result IS NULL

   UPDATE bat_tmp_billing  --計算收單手續費收入費率
      SET svc_amt = comm_amt - int_amt
	WHERE settle_result IS NULL

 -- 20180812 修正SVC_AMT 計算方法 (由手續費 - 發卡回佣) 不再用交易金額 x 收單手續費費率
--           故下列程式碼先註解。
 --UPDATE bat_tmp_billing  --更新SmartPay固定回佣金額
 --   SET svc_amt = comm_amt - int_amt
 --  FROM mdb_merchant_bas mmb
 -- WHERE bat_tmp_billing.card_type = 'S'
 --   AND bat_tmp_billing.mer_no = mmb.mer_no
 --   AND mmb.smartpayrebates = 'Y'
 --   AND settle_result IS NULL

      SET @Blk_Name = '收單手續費收入運算'
      SET @Desc_d = @Blk_Name + '結束'
      SET @Flag = 'END'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
   --發卡區域Card Dist
   UPDATE bat_tmp_billing  --國內國外
      SET card_dist = CASE WHEN is_local = 'Y'
	                       THEN '國內'
						   ELSE '國外'
						    END
	WHERE settle_result IS NULL

   UPDATE bat_tmp_billing  --自行一般、自行分期
      SET card_dist = CASE WHEN (loan_period = '00' OR loan_period = '')
	                       THEN '自行一般'
						   ELSE '自行分期'
						    END
    WHERE onus = 'Y'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --自行VisaDebit卡(無實體卡號)
	  SET card_dist = '自行VisaDebit'
	 FROM set_onus_bin (NOLOCK)
	WHERE card_code = 'VD'
	  AND LEFT(card_no, LEN(bin_no)) = bin_no
	  AND settle_result IS NULL

--利用處理先後順序 變成實體卡號處理優先
   UPDATE bat_tmp_billing  --自行VisaDebit卡 (有實體卡號)
	 SET card_dist = '自行VisaDebit'		 
	FROM ( SELECT sob.card_code, rel_key_detail
             FROM ( SELECT btb.card_no, btba.token_real_pan, btb.rel_key_detail
			          FROM bat_tmp_billing btb (NOLOCK)
					      ,bat_tmp_billing_addition btba (NOLOCK)
					 WHERE btb.rel_key_detail = btba.rel_key_detail
					   AND btb.settle_result IS NULL
					   AND COALESCE(btba.token_real_pan, '') <> ''
				  ) a , set_onus_bin sob (NOLOCK)
			WHERE LEFT(a.token_real_pan, LEN(sob.bin_no)) = sob.bin_no 
			  AND sob.card_code = 'VD'
		 ) b
	WHERE bat_tmp_billing.rel_key_detail = b.rel_key_detail

   UPDATE bat_tmp_billing  --(自/他)行SmartPay(固定/機動)費率
      SET card_dist = CASE WHEN mmb.smartpayrebates = 'Y' AND LEFT(card_no,3) = '812'
	                       THEN '自行SmartPay固定費率'
						   WHEN mmb.smartpayrebates = 'N' AND LEFT(card_no,3) = '812'
						   THEN '自行SmartPay機動費率'
						   WHEN mmb.smartpayrebates = 'Y' AND LEFT(card_no,3) <> '812'
						   THEN '他行SmartPay固定費率'
						   WHEN mmb.smartpayrebates = 'N' AND LEFT(card_no,3) <> '812'
						   THEN '他行SmartPay機動費率'
						   ELSE card_dist
							END
     FROM mdb_merchant_bas mmb (NOLOCK)
	WHERE mmb.mer_no = bat_tmp_billing.mer_no
	  AND card_type = 'S'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --銀聯卡  未來可能有國內銀聯(自行銀聯) 待條件出來後修正
      SET card_dist = '國外銀聯'
	WHERE card_type = 'C'
	  AND settle_result IS NULL

   UPDATE bat_tmp_billing  --DCC 外幣收單
      SET card_dist = 'DCC外幣收單'
	WHERE charge_type = 'DCC'
	  AND settle_result IS NULL
-- ================================================================================== --
--CCY = 901
   UPDATE bat_tmp_billing
	  SET ccy = '901'
	WHERE (ccy = '' OR ccy IS NULL)
-- ================================================================================== --
-- Delay Pay Days Flag 遞延付款天數
      SET @Blk_Name = '遞延付款天數運算'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

   UPDATE bat_tmp_billing
      SET delay_pay_days = mmb.delay_days
	 FROM mdb_merchant_bas mmb (NOLOCK)
    WHERE mmb.mer_no = bat_tmp_billing.mer_no
      AND settle_result IS NULL

   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE delay_pay_days IS NULL) > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
			      ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'delay_pay_days'         --錯誤欄位
				  ,'遞延付款天數比對有誤，請確認特店代號是否正確'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE delay_pay_days IS NULL
			   AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
	    WHERE delay_pay_days IS NULL
   END

   SET @Blk_Name = '遞延付款天數運算'
   SET @Desc_d = @Blk_Name + '結束'
   SET @Flag = 'END'
  EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
-- 更新TX_METHOD
   UPDATE bat_tmp_billing
      SET tx_method = CASE WHEN ((in_cr_rebate_amt IS NOT NULL) AND (in_cr_rebate_amt <> '') AND (CAST(in_cr_rebate_amt AS bigint) <> 0))
			               THEN 'O'  --紅利
						   WHEN loan_period <> '00'
						   THEN 'I'  --分期
						   WHEN card_type = 'S'
						   THEN 'SP'					
						   ELSE ''
						    END
    WHERE charge_type <> 'DCAP' OR charge_type <> 'DCC'

	UPDATE bat_tmp_billing   --人工補登，DCC 無in_cr_rebate_amt, 改用 cr_rebate_amt 判斷
      SET tx_method = CASE WHEN ((cr_rebate_amt IS NOT NULL) AND (cr_rebate_amt <> 0) AND (CAST(cr_rebate_amt AS bigint) <> 0))
			               THEN 'O'  --紅利
						   WHEN loan_period <> '00'
						   THEN 'I'  --分期
						   WHEN card_type = 'S'
						   THEN 'SP'					
						   ELSE ''
						    END
    WHERE charge_type IN ('DCAP','DCC')	
-- ================================================================================== --
-- arn_no微縮影編號 DCC來源有帶 SmartPay 先不編, ErrorList先排除S卡 (呼叫Stored_Procedure)
       SET @Blk_Name = '微縮影編號(ARN_NO)，編碼開始'
       SET @Desc_d = @Blk_Name + '開始'
       SET @Flag = 'START'
      EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
      
	  EXEC sp_pre_bat_tmp_billing_arn_no @batch_section  --呼叫Stored_Procedure 編 arn_no

   IF (SELECT COUNT(*) FROM bat_tmp_billing WHERE arn_no IS NULL) > 0
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
				  ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'arn_no'         --錯誤欄位
				  ,'arn_no微縮影編號有誤，請確認。'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE arn_no IS NULL
			   AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
	    WHERE arn_no IS NULL AND RISK_DELAY_PAY_FLAG <> '人工退貨強制放行'
   END

   SET @Blk_Name = '微縮影編號(ARN_NO)，編碼開始'
   SET @Desc_d = @Blk_Name + '結束'
   SET @Flag = 'END'
  EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
   UPDATE bat_tmp_billing
      SET term_id = 'MMMMMMMM'
	WHERE charge_type IN ('EC','CUPEC','CYBERSOURCE')
	  AND (term_id = '' OR term_id IS NULL)
-- ================================================================================== --
   UPDATE bat_tmp_billing
      SET term_id = 'CCCCCCCC'	     
	WHERE charge_type = 'DCAP'
	  AND (term_id = '' OR term_id IS NULL)

   UPDATE bat_tmp_billing
      SET ent_mode = '01'
	WHERE charge_type = 'DCAP'
	  AND (ent_mode = '' OR ent_mode IS NULL)
-- ================================================================================== --
--因現行MBS預借現金UI無銀聯欄位，故銀聯卡不得預借現金交易 (07, CU)
   IF EXISTS (SELECT COUNT(*) FROM bat_tmp_billing WHERE card_type = 'C' AND tx_type = '07')
   BEGIN
       INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
	        SELECT in_tx_type_orig
			      ,tx_type
				  ,mer_no
			      ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
				  ,in_tx_amount
				  ,tx_amount
				  ,batch_no
				  ,card_no
				  ,authcode
				  ,'tx_type'         --錯誤欄位
				  ,'預借現金交易不支援銀聯卡'  --錯誤狀況敘述
				  ,log_line_no
				  ,GETDATE()   --INS_DATETIME
				  ,rel_key_detail
				  ,batch_section
				  ,charge_type
				  ,charge_source
				  ,charge_source_file_name
				  ,CONVERT(varchar(10), @Today, 111)
				  ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
			  FROM bat_tmp_billing btb
			 WHERE card_type = 'C' 
			   AND tx_type = '07'
			   AND settle_result IS NULL

       UPDATE bat_tmp_billing
	      SET settle_result = '01'
		     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
	    WHERE card_type = 'C' 
		  AND tx_type = '07'
   END  
-- ================================================================================== --
-- 人工補登DCAP REKEY 借位 (MARK = 'R')
   UPDATE bat_tmp_billing
      SET comm_rate = 0
	     ,comm_amt = 0
		 ,INT_rate = 0
		 ,INT_AMT = 0
		 ,svc_rate = 0
		 ,svc_amt = 0
    WHERE charge_type = 'DCAP'
	  AND UPPER(mark) = 'R'
-- ================================================================================== --
-- CYBERSOURCE 重複請款檢核
IF (@batch_section = '3')
BEGIN
    BEGIN TRY
      SET @Blk_Name = 'CYBERSOURCE 檢核'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
 
       IF EXISTS(SELECT * FROM tempdb.sys.tables WHERE [name]='##TEMP_CYBERSOURCE') --檢查Temp table若已存在則Drop以便重建
     DROP TABLE ##TEMP_CYBERSOURCE

	 IF EXISTS(SELECT * FROM tempdb.sys.tables WHERE [name]='##TEMP_CYBERSOURCE2') --檢查Temp table若已存在則Drop以便重建
     DROP TABLE ##TEMP_CYBERSOURCE2
   SELECT * INTO #bat_tmp_billing_CYBERSOURCE FROM bat_tmp_billing (nolock) WHERE charge_source = 'CYBERSOURCE'	
   CREATE INDEX bat_tmp_billing_CYBERSOURCE ON [DBO].[#bat_tmp_billing_CYBERSOURCE] (mer_no, card_no, tx_type, in_tx_amount) 
   SELECT b.rel_key_detail
         ,b.mer_no
		 ,b.card_no
		 ,b.authcode
		 ,b.tx_type
		 ,b.in_tx_amount
	 INTO ##TEMP_CYBERSOURCE
     --FROM bat_tmp_billing b (nolock) 
	 FROM #bat_tmp_billing_CYBERSOURCE b (nolock) 
	WHERE EXISTS (SELECT mer_no, card_no, authcode, tx_type, tx_date, in_tx_amount, COUNT(*)
                  --  FROM bat_tmp_billing a (nolock)
				    FROM #bat_tmp_billing_CYBERSOURCE a (nolock)
                   --WHERE charge_source = 'CYBERSOURCE'
				    -- AND a.mer_no = b.mer_no
					WHERE a.mer_no = b.mer_no
					 AND a.card_no = b.card_no
					 AND a.authcode = b.authcode
					 AND a.tx_type = b.tx_type
					 AND a.in_tx_amount = b.in_tx_amount
				   GROUP BY mer_no, card_no, authcode, tx_type, tx_date, in_tx_amount
				  HAVING COUNT(*) > 1
				 )
   --   AND b.charge_source = 'CYBERSOURCE'	

   SELECT MIN(b.rel_key_detail) AS rel_key_detail
         ,b.mer_no
		 ,b.card_no
		 ,b.authcode
		 ,b.tx_type
		 ,b.in_tx_amount
	 INTO ##TEMP_CYBERSOURCE2
    -- FROM bat_tmp_billing b (nolock) 
	 FROM #bat_tmp_billing_CYBERSOURCE b (nolock) 
	WHERE EXISTS (SELECT mer_no, card_no, authcode, tx_type, tx_date, in_tx_amount, COUNT(*)
                  --  FROM bat_tmp_billing a (nolock)
				    FROM #bat_tmp_billing_CYBERSOURCE a (nolock)
                   --WHERE charge_source = 'CYBERSOURCE'
				   --  AND a.mer_no = b.mer_no
				   WHERE a.mer_no = b.mer_no
					 AND a.card_no = b.card_no
					 AND a.authcode = b.authcode
					 AND a.tx_type = b.tx_type
					 AND a.in_tx_amount = b.in_tx_amount
				   GROUP BY mer_no, card_no, authcode, tx_type, tx_date, in_tx_amount
				  HAVING COUNT(*) > 1
				 )
    --  AND b.charge_source = 'CYBERSOURCE'
	GROUP BY b.mer_no, b.card_no, b.authcode, b.tx_type, b.in_tx_amount

	DELETE 
	  FROM ##TEMP_CYBERSOURCE 
	 WHERE rel_key_detail IN (SELECT rel_key_detail
	                            FROM ##TEMP_CYBERSOURCE2)

   INSERT INTO bat_tmp_billing_error_list    --錯誤訊息帶IN匯入的值 (待修正)
   SELECT in_tx_type_orig
		 ,tx_type
         ,mer_no
		 ,(SELECT bas_cname FROM mdb_merchant_bas mmb WHERE mmb.mer_no = btb.mer_no)
		 ,in_tx_amount
		 ,tx_amount
		 ,batch_no
		 ,card_no
		 ,authcode
		 ,'CYBERSOURCE_COMPARE'         --錯誤欄位
		 ,'CYBERSOURCE 重複請款'  --錯誤狀況敘述
		 ,log_line_no
		 ,GETDATE()   --INS_DATETIME
		 ,rel_key_detail
		 ,batch_section
		 ,charge_type
		 ,charge_source
		 ,charge_source_file_name
		 ,CONVERT(varchar(10), @Today, 111)
		 ,dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
    -- FROM bat_tmp_billing btb
	 FROM #bat_tmp_billing_CYBERSOURCE btb
    WHERE rel_key_detail IN (SELECT rel_key_detail FROM ##TEMP_CYBERSOURCE)	 

   UPDATE bat_tmp_billing 
	  SET settle_result = '01' 
	WHERE rel_key_detail IN (SELECT rel_key_detail
	                           FROM ##TEMP_CYBERSOURCE)

     DROP TABLE ##TEMP_CYBERSOURCE
	 DROP TABLE ##TEMP_CYBERSOURCE2
	 
	 DROP TABLE #bat_tmp_billing_CYBERSOURCE

      SET @Blk_Name = 'CYBERSOURCE 檢核'
      SET @Desc_d = @Blk_Name + '結束'
      SET @Flag = 'END'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
  END TRY
  BEGIN CATCH
     SELECT @ErrNumber = CONVERT(varchar(10),ERROR_NUMBER())
		   ,@ErrProcedure = ERROR_PROCEDURE()
		   ,@ErrMessage = ERROR_MESSAGE()
		   ,@ErrLine = CONVERT(varchar(10), ERROR_LINE())
		   ,@ErrorSeverity = ERROR_SEVERITY()
		   ,@ErrorState = ERROR_STATE();  

	   DROP TABLE ##TEMP_CYBERSOURCE  --若有Exception，刪除Temp Table 

	   EXEC batch_error_record @ErrNumber, @ErrProcedure, @ErrMessage, @ErrLine, @Sp_Code, @Sp_Name, @Blk_Name

  RAISERROR (@ErrMessage, @ErrorSeverity, @ErrorState, @ErrProcedure)  --將ERROR拋給呼叫端
	 RETURN 0;  --中斷此Procedure
END CATCH
END
-- ================================================================================== --
IF (@batch_section = '1')
BEGIN 
    BEGIN TRY
      SET @Blk_Name = 'AUTHLOG 檢核'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

     EXEC SP_AUTHLOG_COMPARED

	  SET @Blk_Name = 'AUTHLOG 檢核'
      SET @Desc_d = @Blk_Name + '結束'
      SET @Flag = 'END'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'  
  END TRY
    BEGIN CATCH
         SELECT @ErrNumber = CONVERT(varchar(10),ERROR_NUMBER())
		       ,@ErrProcedure = ERROR_PROCEDURE()
		       ,@ErrMessage = ERROR_MESSAGE()
		       ,@ErrLine = CONVERT(varchar(10), ERROR_LINE())
		       ,@ErrorSeverity = ERROR_SEVERITY()
		       ,@ErrorState = ERROR_STATE();   
	       EXEC batch_error_record @ErrNumber, @ErrProcedure, @ErrMessage, @ErrLine, @Sp_Code, @Sp_Name, @Blk_Name
 
      RAISERROR (@ErrMessage, @ErrorSeverity, @ErrorState, @ErrProcedure)  --將ERROR拋給呼叫端
	     RETURN 0;  --中斷此Procedure
    END CATCH    
END
-- ================================================================================== --
--新光三越特店，若token_real_pan為空，且卡別為聯名卡，將聯名卡卡別回押至comm_rate_card_type。
      SET @Blk_Name = '新光三越聯名卡回押卡別作業'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D' 

   UPDATE bat_tmp_billing     
      SET comm_rate_card_type = 'SK'    
    WHERE rel_key_detail IN (SELECT rel_key_detail
                               FROM bat_tmp_billing btb
                                   ,set_onus_bin sob
                              WHERE (LEFT(btb.mer_no,10) = '0000081266')  --新光三越特店
                                AND btb.onus = 'Y'                        --自行卡(減少資料量)      
                                AND LEFT(btb.card_no, LEN(sob.bin_no)) = sob.bin_no   --自行卡(串自行卡BIN)
                                AND sob.card_code = 'SK'
                                AND btb.rel_key_detail NOT IN ( SELECT rel_key_detail FROM bat_tmp_billing_addition)  --沒有Addition的資料
								AND btb.settle_result IS NULL
								AND btb.batch_section = @batch_section
                              UNION ALL
                             SELECT btb.rel_key_detail
                               FROM bat_tmp_billing btb
                                   ,bat_tmp_billing_addition btba
                                   ,set_onus_bin sob
                              WHERE (LEFT(btb.mer_no,10) = '0000081266')  --新光三越特店
                                AND btb.onus = 'Y'                        --自行卡(減少資料量)                                
                                AND LEFT(btb.card_no, LEN(sob.bin_no)) = sob.bin_no   --自行卡(串自行卡BIN)
                                AND sob.card_code = 'SK'                              --是新光三越聯名卡     
								AND btba.token_real_pan = ''                          --有Addition的資料但是 token_real_pan 為空	  
                                AND btba.rel_key_detail = btb.rel_key_detail
								AND btb.settle_result IS NULL
								AND btb.batch_section = @batch_section
						    )

	  SET @Blk_Name = '新光三越聯名卡回押卡別作業'
      SET @Desc_d = @Blk_Name + '結束'
      SET @Flag = 'END'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'
-- ================================================================================== --
   UPDATE bat_tmp_billing
      SET settle_result = '00'
	     ,settle_date = dbo.get_workdate(CONVERT(varchar(10), @Today, 111))
	WHERE settle_result IS NULL
-- ================================================================================== --
    --EC 批次編號(batch_no)編碼
    BEGIN TRY
	  SET @Blk_Name = 'EC BATCHNO 編碼'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

	 EXEC SP_EC_BATCHNO_UPDATED

	  SET @Blk_Name = 'EC BATCHNO 編碼'
      SET @Desc_d = @Blk_Name + '結束'
      SET @Flag = 'END'

     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D' 
	  
      END TRY
    BEGIN CATCH
         SELECT @ErrNumber = CONVERT(varchar(10),ERROR_NUMBER())
		       ,@ErrProcedure = ERROR_PROCEDURE()
		       ,@ErrMessage = ERROR_MESSAGE()
		       ,@ErrLine = CONVERT(varchar(10), ERROR_LINE())
		       ,@ErrorSeverity = ERROR_SEVERITY()
		       ,@ErrorState = ERROR_STATE();   
	       EXEC batch_error_record @ErrNumber, @ErrProcedure, @ErrMessage, @ErrLine, @Sp_Code, @Sp_Name, @Blk_Name
 
      RAISERROR (@ErrMessage, @ErrorSeverity, @ErrorState, @ErrProcedure)  --將ERROR拋給呼叫端
	     RETURN 0;  --中斷此Procedure
    END CATCH
-- ================================================================================== --
IF (@batch_section = '1')
BEGIN 
    --Master Collection 回押交易時間
    BEGIN TRY
	  SET @Blk_Name = 'Master Collection 回押交易時間'
      SET @Desc_d = @Blk_Name + '開始'
      SET @Flag = 'START'
     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D'

	 EXEC SP_PRE_REFILL_TX_TIME

	  SET @Blk_Name = 'Master Collection 回押交易時間'
      SET @Desc_d = @Blk_Name + '結束'
      SET @Flag = 'END'

     EXEC batch_record @Sp_Code, @Desc_d, @Flag, 'D' 
	  
      END TRY
    BEGIN CATCH
         SELECT @ErrNumber = CONVERT(varchar(10),ERROR_NUMBER())
		       ,@ErrProcedure = ERROR_PROCEDURE()
		       ,@ErrMessage = ERROR_MESSAGE()
		       ,@ErrLine = CONVERT(varchar(10), ERROR_LINE())
		       ,@ErrorSeverity = ERROR_SEVERITY()
		       ,@ErrorState = ERROR_STATE();   
	       EXEC batch_error_record @ErrNumber, @ErrProcedure, @ErrMessage, @ErrLine, @Sp_Code, @Sp_Name, @Blk_Name
 
      RAISERROR (@ErrMessage, @ErrorSeverity, @ErrorState, @ErrProcedure)  --將ERROR拋給呼叫端
	     RETURN 0;  --中斷此Procedure
    END CATCH
END
-- ================================================================================== --
   --被剔退的資料(settle_result = 01)，手續費相關欄位清為0
   UPDATE bat_tmp_billing
      SET comm_rate = 0
	     ,comm_amt = 0
		 ,base_int_rate = 0
		 ,int_rate = 0
		 ,int_amt = 0
		 ,svc_rate = 0
		 ,svc_amt = 0
		 ,pre_pay_date = NULL    --預計付款日除了ICA_ERROR剔退外(只付款不清算)，其餘剔退皆清空
	WHERE settle_result = '01'
-- ================================================================================== --
   --欄位不要NULL
   UPDATE bat_tmp_billing
      SET term_id = COALESCE (term_id,'')
         ,closed_date = COALESCE (closed_date,'')
	     ,batch_no = COALESCE (batch_no,'')  
	     ,cavv_aav = COALESCE (cavv_aav,'')
	     ,cr_rebate_amt = COALESCE (cr_rebate_amt, 0)
	     ,cr_rebate_cnt = COALESCE (cr_rebate_cnt, 0)
	     ,term_entry_cap = COALESCE (term_entry_cap,'')
		 ,mark = COALESCE (mark,'')
		 ,risk_delay_pay_flag = COALESCE(risk_delay_pay_flag,'')
		 ,card_type = COALESCE(card_type, '')
-- ================================================================================== --
   --ERROR LIST 必要欄位回押
   UPDATE bat_tmp_billing_error_list
      SET tx_type = btb.tx_type
	     ,tx_amount = btb.tx_amount
	 FROM bat_tmp_billing btb
	WHERE bat_tmp_billing_error_list.rel_key_detail = btb.rel_key_detail
	  AND bat_tmp_billing_error_list.settle_date = btb.settle_date	  
-- ================================================================================== --
END TRY
BEGIN CATCH
     SELECT @ErrNumber = CONVERT(varchar(10),ERROR_NUMBER())
		   ,@ErrProcedure = ERROR_PROCEDURE()
		   ,@ErrMessage = ERROR_MESSAGE()
		   ,@ErrLine = CONVERT(varchar(10), ERROR_LINE())
		   ,@ErrorSeverity = ERROR_SEVERITY()
		   ,@ErrorState = ERROR_STATE();   
	   EXEC batch_error_record @ErrNumber, @ErrProcedure, @ErrMessage, @ErrLine, @Sp_Code, @Sp_Name, @Blk_Name

  RAISERROR (@ErrMessage, @ErrorSeverity, @ErrorState, @ErrProcedure)  --將ERROR拋給呼叫端
	 RETURN 0;  --中斷此Procedure
END CATCH
--寫入結束LOG
 SET @Desc_m = @Sp_Name + '結束'
 SET @Flag = 'END'
EXEC batch_record @Sp_Code, @Desc_m, @Flag, 'M'
GO
