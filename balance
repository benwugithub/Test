USE [MSCSDB_U2_3]
GO

/****** Object:  StoredProcedure [dbo].[SP_BIL_AP_AR_BALANCE]    Script Date: 2019/2/1 下午 07:54:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/*************************************************************************************************************
作        者：Justin Tseng
日        期：2018/05/11
程式代號：SP_BIL_AP_AR_BALANCE
程式名稱：APAR報表平帳
目　　的：提供台新當日APAR平帳
參數說明：
置放位置：處理台新批次之SERVER
傳回值　：無
副作用　：無
備　註　：
範　例　：exec SP_BIL_AP_AR_BALANCE
'--------------- -------------------------------------------------- ---------- ------ ----------------------------------------------------------
'版本號 :     v1.0                  Justin     Create					  2017/07/14
'*************************************************************************************************************/

CREATE PROCEDURE [dbo].[SP_BIL_AP_AR_BALANCE]
AS
DECLARE @CHARGELOG_DATE DATE
DECLARE @sSQL VARCHAR(500)
SET @CHARGELOG_DATE = GETDATE()
SELECT @CHARGELOG_DATE = CONVERT(DATE, ISNULL(LEFT(CHARGELOG_DATE,4) + '/' + SUBSTRING(CHARGELOG_DATE,5,2) + '/' + RIGHT(CHARGELOG_DATE,2), GETDATE())) FROM SET_SYS_PARA
SET  @sSQL = 'SELECT * INTO ##BAT_TMP_BILLING FROM BAT_TMP_BILLING_' + LEFT(CONVERT(VARCHAR, @CHARGELOG_DATE, 112),6) +
					' WHERE CONVERT(VARCHAR, SETTLE_DATE , 112) = ''' + CONVERT(VARCHAR, @CHARGELOG_DATE , 112) + ''' AND SETTLE_RESULT =''00'' AND TX_METHOD <> ''SP'' AND TX_TYPE <> ''07'' '
EXEC (@sSQL)
SELECT SUM(特店應付金額) - SUM(轉帳金額) - SUM(匯款金額) - SUM(遞延付款金額) - SUM(人工退貨扣帳) - SUM(暫不付款扣款金額) - SUM(當日緩帳生效金額) - SUM(當日部份暫不付款生效金額) - SUM(作管費金額) - SUM(緊急撥款扣款金額) -
SUM(付款手續費差異金額) + SUM(前期未付今日到期金額) + SUM(人工退貨扣帳還款) + SUM(當日負數金額) + SUM(暫不付款還款金額) + SUM(當日部份暫不付款還款金額) + SUM(紅利金額) + SUM(緊急撥款還款金額) + SUM(異常金額) 總額差異, 
PAY_MER_NO, 
SUM(特店應付金額) 特店應付金額, SUM(轉帳金額) 轉帳金額, SUM(匯款金額) 匯款金額, SUM(遞延付款金額) 遞延付款金額, SUM(人工退貨扣帳) 人工退貨扣帳, SUM(暫不付款扣款金額) 暫不付款扣款金額, 
SUM(當日緩帳生效金額) 當日緩帳生效金額, SUM(當日部份暫不付款生效金額) 當日部份暫不付款生效金額, SUM(作管費金額) 作管費金額, SUM(緊急撥款扣款金額) 緊急撥款扣款金額, SUM(付款手續費差異金額) 付款手續費差異金額,
SUM(前期未付今日到期金額) 前期未付今日到期金額, SUM(人工退貨扣帳還款) 人工退貨扣帳還款, SUM(當日負數金額) 當日負數金額, SUM(暫不付款還款金額) 暫不付款還款金額, SUM(當日部份暫不付款還款金額) 當日部份暫不付款還款金額,
SUM(紅利金額) 紅利金額, SUM(緊急撥款還款金額) 緊急撥款還款金額, SUM(異常金額) 異常金額
 FROM
(SELECT PAY_MER_NO, SUM(TX_AMOUNT * AMT_SIGN) 特店應付金額,
0 轉帳金額, 0 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
from ##BAT_TMP_BILLING
--where SETTLE_RESULT ='00' AND TX_METHOD <> 'SP' AND TX_TYPE <> '07'
GROUP BY PAY_MER_NO
UNION ALL 
SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, 0 特店應付金額,
SUM(AMOUNT) 轉帳金額, 0 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
FROM BIL_SAM_INTERNAL A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO 
WHERE A.MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE ISSMARTPAYMERCHANT = 'Y')
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END
UNION ALL 
SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, 0 特店應付金額,
0 轉帳金額, SUM(AMOUNT) 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
FROM BIL_SAM_FISC A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO 
WHERE A.MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE ISSMARTPAYMERCHANT = 'Y')
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END
UNION ALL 
SELECT PAY_MER_NO, 0 特店應付金額,
0 轉帳金額, 0 匯款金額, SUM(TX_AMOUNT) 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
FROM (SELECT PAY_MER_NO, SUM((TX_AMOUNT + CASE WHEN LEFT(MER_NO, 10) <> '0000081266' THEN CR_REBATE_AMT ELSE 0 END) * AMT_SIGN) TX_AMOUNT FROM ##BAT_TMP_BILLING
WHERE ISNULL(RISK_DELAY_PAY_FLAG,'') <> '人工退貨' --AND ISNULL(RISK_DELAY_PAY_FLAG,'') <> '人工退貨強制放行'
AND MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE ISSMARTPAYMERCHANT = 'Y')
AND PRE_PAY_DATE > @CHARGELOG_DATE 
GROUP by PAY_MER_NO
UNION ALL
SELECT PAY_MER_NO, SUM((TX_AMOUNT + CASE WHEN LEFT(MER_NO, 10) <> '0000081266' THEN CR_REBATE_AMT ELSE 0 END) * AMT_SIGN) TX_AMOUNT FROM BAT_TMP_BILLING_HOLD_REFUND_D_history
WHERE SETTLE_RESULT = '00' 
AND MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE ISSMARTPAYMERCHANT = 'Y')
AND PRE_PAY_DATE > @CHARGELOG_DATE AND  TX_METHOD <> 'SP' AND TX_TYPE <> '07' AND DBO.get_workdate(DATA_DATE) = @CHARGELOG_DATE
GROUP by PAY_MER_NO
UNION ALL
SELECT PAY_MER_NO, SUM((TX_AMOUNT + CASE WHEN LEFT(MER_NO, 10) <> '0000081266' THEN CR_REBATE_AMT ELSE 0 END) * AMT_SIGN) TX_AMOUNT FROM BAT_TMP_BILLING_REFUND_HISTORY
WHERE SETTLE_RESULT = '00' 
AND MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE ISSMARTPAYMERCHANT = 'Y')
AND PRE_PAY_DATE > @CHARGELOG_DATE AND  TX_METHOD <> 'SP' AND TX_TYPE <> '07' AND SETTLE_DATE = @CHARGELOG_DATE AND ISNULL(RISK_DELAY_PAY_FLAG,'') <> '人工退貨強制放行'
GROUP by PAY_MER_NO
) A GROUP BY PAY_MER_NO
UNION ALL 
SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, 0 特店應付金額, 
0 轉帳金額, 0 匯款金額, 0 遞延付款金額, ROUND(SUM((AMOUNT + CASE WHEN LEFT(A.MER_NO,10) <> '0000081266' THEN CR_REBATE_AMT ELSE 0 END) * CASE ST_TC WHEN '06' THEN  -1 ELSE 1 END),0) 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
FROM  BIL_HOLD_REFUND_D A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO 
WHERE CON_DATE = CONVERT(VARCHAR(8), @CHARGELOG_DATE, 112) AND FLAG = 'H' 
AND A.MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE IsSmartPayMerchant = 'Y')
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END
UNION ALL 
SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, 0 特店應付金額, 
0 轉帳金額, 0 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, ROUND(SUM(AMOUNT),0) 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
FROM BIL_STOP_PAY_HIS A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO 
WHERE STOP_DATE = @CHARGELOG_DATE  AND STOP_FLAG = 'H'
AND A.MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE IsSmartPayMerchant = 'Y')					
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END
UNION ALL
SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, 0 特店應付金額,
0 轉帳金額, 0 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, IsNull(Sum(ROUND(H_O_AMOUNT,0) - ROUND(H_DIFF_AMOUNT,0)),0) 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
From BIL_SAM_HOLD A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO 
WHERE A.MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE IsSmartPayMerchant = 'Y')
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END
UNION ALL
SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, 0 特店應付金額,
0 轉帳金額, 0 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, IsNull(SUM(ROUND(P_A_AMOUNT,0)),0) 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
FROM BIL_HOLDPAY_EFFECT_HISTORY A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO  
WHERE P_STATUS = 'H' AND A.MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE IsSmartPayMerchant = 'Y') AND DATA_DATE = @CHARGELOG_DATE
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END
UNION ALL
SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, 0 特店應付金額,
0 轉帳金額, 0 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, IsNull(Sum(CASE PAYFLAG WHEN 'A' THEN  (CHARGBACK_AMT + REMAIN_AMT) * (-1) ELSE CHARGBACK_AMT END),0) 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
FROM BIL_OTHER_CHARGEBACK_HIS A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO  
Where IS_OK_FLAG = 'Y' And GU_TYPE ='G' and  G_FLAG = 'Y' And RPT_DATE = @CHARGELOG_DATE AND CANCEL_CHARGBACK_FLAG <> 'Y' AND GU_G_FLAG <> 'Y'
AND A.MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE IsSmartPayMerchant = 'Y')
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END
UNION ALL
SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, 0 特店應付金額,
0 轉帳金額, 0 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, ROUND(ISNULL(SUM(COMM),0),0) 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
FROM BIL_PAYMENT_FEE_DIFF A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO  
WHERE DATA_DATE = @CHARGELOG_DATE AND BRANCH = '603'
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END
UNION ALL
SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, 0 特店應付金額,
0 轉帳金額, 0 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, SUM(AMOUNT) 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
FROM BIL_DELAY_PAYMENT A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO WHERE PAY_DATE = @CHARGELOG_DATE
AND A.MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE IsSmartPayMerchant = 'Y')
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END	              
UNION ALL
SELECT PAY_MER_NO, 0 特店應付金額, 
0 轉帳金額, 0 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, SUM(TX_AMT) 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
FROM 
(SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, ROUND(SUM((AMOUNT - CR_REBATE_AMT) * CASE ST_TC WHEN '06' THEN -1 ELSE 1 END),0) TX_AMT
FROM BIL_HOLD_REFUND_D_HIS A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO 
WHERE [dbo].[get_workdate](CONVERT(DATE, A.BATCH_DATE))  = @CHARGELOG_DATE AND A.FLAG = 'H' AND ((CON_FLAG <> 'Y' AND A.CON_DATE <> CONVERT(VARCHAR(8), @CHARGELOG_DATE, 112)) OR (CON_FLAG = 'Y' AND A.CON_DATE = CONVERT(VARCHAR(8), @CHARGELOG_DATE, 112))) AND B.IsSmartPayMerchant <> 'Y'
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END
--UNION ALL
--SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO,ROUND(SUM((AMOUNT - CR_REBATE_AMT) * CASE ST_TC WHEN '06' THEN -1 ELSE 1 END),0)  TX_AMT
--FROM DIS_REFUND_DETAIL_HIS A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO 
--WHERE CONVERT(DATE, A.BATCH_DATE) = @CHARGELOG_DATE AND DT_CODE = 'H' AND CON_DATE <> CONVERT(VARCHAR(8), @CHARGELOG_DATE, 112) AND B.IsSmartPayMerchant <> 'Y'
--GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END
) A1 GROUP BY PAY_MER_NO
UNION ALL
SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, 0 特店應付金額, 
0 轉帳金額, 0 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, isnull(SUM(AMOUNT),0) 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
FROM BIL_HOLDFUND A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO  
WHERE ISNULL(IS_APPROVE,'N') = 'Y' AND PFLAG = '0' 
AND A.MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE IsSmartPayMerchant = 'Y') 
AND HOLDFUND_DATE = @CHARGELOG_DATE AND APPROVE_USER = 'SYSTEM'
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END
UNION ALL
Select CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, 0 特店應付金額, 
0 轉帳金額, 0 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, ROUND(SUM(AMOUNT),0) 暫不付款還款金額, 0 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
FROM BIL_STOP_PAY_HIS A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO 
WHERE DATA_DATE = @CHARGELOG_DATE AND STOP_FLAG = 'P'
AND A.MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE IsSmartPayMerchant = 'Y')			
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END
UNION ALL
SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, 0 特店應付金額, 
0 轉帳金額, 0 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, IsNull(SUM(ROUND(P_A_AMOUNT,0)),0) * -1 當日部份暫不付款還款金額, 0 紅利金額, 0 緊急撥款還款金額, 0 異常金額
FROM BIL_HOLDPAY_EFFECT A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO 
WHERE P_STATUS = 'A' AND A.MER_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE IsSmartPayMerchant = 'Y')
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END
UNION ALL
SELECT CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END PAY_MER_NO, 0 特店應付金額, 
0 轉帳金額, 0 匯款金額, 0 遞延付款金額, 0 人工退貨扣帳, 0 暫不付款扣款金額, 0 當日緩帳生效金額, 0 當日部份暫不付款生效金額, 0 作管費金額, 0 緊急撥款扣款金額, 0 付款手續費差異金額, 0 前期未付今日到期金額, 0 人工退貨扣帳還款, 0 當日負數金額, 0 暫不付款還款金額, 0 當日部份暫不付款還款金額, IsNull(sum(CR_REBATE_AMT),0) 紅利金額, 0 緊急撥款還款金額, 0 異常金額
From ACC_CASHREBATE_SUM A JOIN MDB_MERCHANT_BAS B ON A.MER_NO = B.MER_NO   
where EOD_DATE = @CHARGELOG_DATE AND LEFT(A.MER_NO,10) <> '0000081266'
AND MAIN_NO NOT IN (SELECT MER_NO FROM MDB_MERCHANT_BAS WHERE IsSmartPayMerchant = 'Y')
GROUP BY CASE WHEN B.PAYTOMAIN = 'Y' THEN B.IN_MAIN_NO ELSE A.MER_NO END ) A 
GROUP BY PAY_MER_NO
ORDER BY SUM(特店應付金額) - SUM(轉帳金額) - SUM(匯款金額) - SUM(遞延付款金額) - SUM(人工退貨扣帳) - SUM(暫不付款扣款金額) - SUM(當日緩帳生效金額) - SUM(當日部份暫不付款生效金額) - SUM(作管費金額) - SUM(緊急撥款扣款金額) -
SUM(付款手續費差異金額) + SUM(前期未付今日到期金額) + SUM(人工退貨扣帳還款) + SUM(當日負數金額) + SUM(暫不付款還款金額) + SUM(當日部份暫不付款還款金額) + SUM(紅利金額) + SUM(緊急撥款還款金額) + SUM(異常金額)

DROP TABLE ##BAT_TMP_BILLING

GO

